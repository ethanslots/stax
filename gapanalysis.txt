ii (2 for integers)
ai (3)
ia (4)
aa (1)

   	ii                 	ai             	ia             	aa	
   	nop                	nop            	nop            	nop
!  	not                	not            	not            	not
"  	lit                	lit            	lit            	lit
#  	pow                	count          	count          	substring-count
$  	tostring           	tostring       	concat         	concat
%  	mod                	---            	len            	len
&  	index-assign       	index-assign   	index-assign   	index-assign
'  	char               	char           	char           	char
(  	tostring-left-trim 	left-trim      	left-trim      	left-trim
)  	tostring-right-trim	right-trim     	right-trim     	right-trim
*  	mul                	repeat         	repeat         	join
+  	add                	append         	prepend        	concat
,  	input-pop          	input-pop      	input-pop      	input-pop
-  	sub                	remove-item    	---            	remove-all
.  	lit                	lit            	lit            	lit
/  	div                	batch          	---            	split
0-9	lit                	lit            	lit            	lit
:  	macro              	macro          	macro          	macro
;  	input-peek         	input-peek     	input-peek     	input-peek
<  	lt                 	lt-first       	lt-first       	lt
=  	eq                 	eq-first       	eq-first       	eq
>  	gt                 	gt-first       	gt-first       	gt
?  	if                 	if             	if             	if
@  	get-at             	get-at         	get-at (undoc) 	get-all
A  	lit                	lit            	lit            	lit
B  	---!               	overlap-batch  	uncons-left    	uncons-left
C  	cancel             	cancel         	cancel         	cancel
D  	do-times           	do-times       	drop-first     	drop-first
E  	dec-digits         	dec-digits     	explode        	explode
F  	foreach            	foreach        	foreach        	foreach
G  	gosub              	gosub          	gosub          	gosub
H  	double             	double         	last           	last
I  	bit-and            	index-of       	index-of       	substr-index-of
J  	square             	square         	space-join     	space-join
K  	cross-map          	cross-map      	cross-map      	cross-map
L  	listify-all        	listify-all    	listify-all    	listify-all
M  	bit-or             	chunkify       	transpose      	transpose
N  	negate             	negate         	uncons-right   	uncons-right
O  	tuck-one           	tuck-one       	tuck-one       	tuck-one
P  	print              	print          	print          	print
Q  	peek-print         	peek-print     	peek-print     	peek-print
   	                   	               	               	
   	ii                 	ai             	ia             	aa	
R  	one-range          	one-range      	---            	regex-replace
S  	bit-xor            	combinations   	powerset       	powerset
T  	max                	remove-right   	trim-right     	trim-right
U  	lit                	lit            	lit            	lit
V  	constant           	constant       	constant       	constant
W  	loop               	loop           	loop           	loop
X  	store-x            	store-x        	store-x        	store-x
Y  	store-y            	store-y        	store-y        	store-y
Z  	tuck-zero          	tuck-zero      	tuck-zero      	tuck-zero
[  	copy-under         	copy-under     	copy-under     	copy-under
\  	pair               	array-pair     	array-pair     	zip-repeat
]  	singleton          	singleton      	singleton      	singleton
^  	increment          	increment      	upcase         	upcase
_  	iterating-value    	iterating-value	iterating-value	iterating-value
`  	lit                	lit            	lit            	lit
a  	rotate-stack       	rotate-stack   	rotate-stack   	rotate-stack
b  	copy-both          	copy-both      	copy-both      	copy-both
c  	copy               	copy           	copy           	copy
d  	drop               	drop           	drop           	drop
e  	---!               	---            	eval           	eval
f  	filter             	filter         	filter         	filter
g  	generator          	generator      	generator      	generator
h  	half               	half           	first          	first
i  	index              	index          	index          	index
j  	float-round        	---            	space-split    	space-split
k  	reduce             	reduce         	reduce         	reduce
l  	listify-n          	listify-n      	---            	---
m  	map                	map            	map            	map
n  	copy-next          	copy-next      	copy-next      	copy-next
o  	order              	order          	order          	order
p  	print              	print          	print          	print
q  	print              	print          	print          	print
r  	zero-range         	zero-range     	reverse        	reverse
s  	swap               	swap           	swap           	swap
t  	min                	trim-n         	trim-left      	trim-left
u  	reciprocate        	reciprocate    	unique         	unique
v  	decrement          	decrement      	lowcase        	lowcase
w  	while              	while          	while          	while
x  	x-get              	x-get          	x-get          	x-get
y  	y-get              	y-get          	y-get          	y-get
z  	lit                	lit            	lit            	lit
{  	start-block        	start-block    	start-block    	start-block
|  	namespace          	namespace      	namespace      	namespace
}  	block-target       	block-target   	block-target   	block-target
~  	input-push         	input-push     	input-push     	input-push
